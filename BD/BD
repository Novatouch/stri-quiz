********Création de la base de données*******

-- Database: "BD_PROJET"

-- DROP DATABASE "BD_PROJET";

CREATE DATABASE "BD_PROJET"
  WITH OWNER = postgres
       ENCODING = 'UTF8'
       TABLESPACE = pg_default
       LC_COLLATE = 'French_France.1252'
       LC_CTYPE = 'French_France.1252'
       CONNECTION LIMIT = -1;


CREATE TABLE Utilisateurs
(
	idUtilisateur SERIAL CONSTRAINT cle_util PRIMARY KEY,
	nomU	VARCHAR(25),
	prenomU  VARCHAR(25),
	pseudo	VARCHAR(20),
	passwordU VARCHAR (1000), /*On laisse la place pour crypter le mot de passe*/
	typeCompte VARCHAR(50),
	CHECK(typeCompte='Enseignant' OR typeCompte='Etudiant' 
OR typeCompte='Administrateur')
);  

CREATE TABLE Formations
(
	idFormation SERIAL CONSTRAINT cle_formation PRIMARY KEY,
	nomF	VARCHAR(25)
);  
CREATE TABLE Groupes
(
	idGroupe SERIAL CONSTRAINT cle_groupe 
PRIMARY KEY,
	nomG	VARCHAR(25),
	promotion VARCHAR(25),
	idFormation int,
	CONSTRAINT fk_idFormation FOREIGN KEY(idFormation) REFERENCES Formations(idFormation)
);  



CREATE TABLE Matieres
(
	idMatiere SERIAL CONSTRAINT cle_matiere PRIMARY KEY,
	nomM	VARCHAR(25)
);  

CREATE TABLE Cours
(
	idCours SERIAL CONSTRAINT cle_cours PRIMARY KEY,
	nomC	VARCHAR(25),
	idMatiere int,
	CONSTRAINT fk_idMatiere FOREIGN KEY(idMatiere) REFERENCES Matieres(idMatiere)
);  

CREATE TABLE Fichiers
(
	idFichier SERIAL CONSTRAINT cle_fichier PRIMARY KEY,
	nomF	VARCHAR(25),
	lien VARCHAR(200),
	idCours int,
	CONSTRAINT fk_idCours FOREIGN KEY(idCours) REFERENCES Cours(idCours)
);  

CREATE TABLE Quiz
(
	idQuiz SERIAL CONSTRAINT cle_quizz PRIMARY KEY,
	nomQ	VARCHAR(25),
	CHECK(typeQuizz='' OR typeQuizz='' OR typeQuizz='') /*Tu peux trouver le domaine de valeurs stp j'ai pas la moindre idéé*/,
	tempsEpreuve int,
	passwordQ	VARCHAR(100),
	difficulte	int,
	idCours int,
	typeQuizz VARCHAR(50),
	CONSTRAINT fk_idCours FOREIGN KEY(idCours) REFERENCES Cours(idCours)
);  

CREATE TABLE Propositions
(
	idProposition SERIAL CONSTRAINT cle_proposition PRIMARY KEY,
	intituleProp	VARCHAR(25)
);  

CREATE TABLE Questions
(
	idQuestion SERIAL CONSTRAINT cle_question PRIMARY KEY,
	intituleQ	VARCHAR(25)
);  

 

CREATE TABLE Gerer
(
	idUtilisateur	int,
	idMatiere	int,
	CONSTRAINT fk_idUtilisateur FOREIGN KEY(idUtilisateur) REFERENCES Utilisateurs(idUtilisateur),
	CONSTRAINT fk_idMatiere FOREIGN KEY(idMatiere) REFERENCES Matieres(idMatiere),
	CONSTRAINT pk_ag PRIMARY KEY (idUtilisateur,idMatiere)
);  

CREATE TABLE AppartenirGroupe
(
	idUtilisateur	int,
	idGroupe int,
	CONSTRAINT fk_idUtilisateur FOREIGN KEY(idUtilisateur) REFERENCES Utilisateurs(idUtilisateur),
	CONSTRAINT fk_idGroupe FOREIGN KEY(idGroupe) REFERENCES Groupes(idGroupe),	
	CONSTRAINT pk_agroupe PRIMARY KEY (idUtilisateur,idGroupe)
);  

CREATE TABLE Acceder
(
	idMatiere	int,
	idFormation	int,
	CONSTRAINT fk_idMatiere FOREIGN KEY(idMatiere) REFERENCES Matieres(idMatiere),
	CONSTRAINT fk_idFormation FOREIGN KEY(idFormation) REFERENCES Formations(idFormation),
	CONSTRAINT pk_acceder PRIMARY KEY (idMatiere,idFormation)
);  

CREATE TABLE Avoir
(
	idFormation	int,
	idCours	int,
	CONSTRAINT fk_idFormation FOREIGN KEY(idFormation) REFERENCES Formations(idFormation),
	CONSTRAINT fk_idCours FOREIGN KEY(idCours) REFERENCES Cours(idCours),
	CONSTRAINT pk_avoir PRIMARY KEY (idFormation,idCours),
	etreVisible	VARCHAR(50),
	CHECK(etreVisible='true' OR etreVisible='false')
);  



CREATE TABLE ContenirQuestion
(
	idQuestion	int,
	idQuiz	int,
	CONSTRAINT fk_idQuestion FOREIGN KEY(idQuestion) REFERENCES Questions(idQuestion),
	CONSTRAINT fk_idQuiz FOREIGN KEY(idQuiz) REFERENCES Quiz(idQuiz),
	CONSTRAINT pk_cq PRIMARY KEY (idQuestion,idQuiz)
);  


CREATE TABLE ProposerReponse
(
	idQuestion	int,
	idProposition	int,
	CONSTRAINT fk_idQuestion FOREIGN KEY(idQuestion) REFERENCES Questions(idQuestion),
	CONSTRAINT fk_idProposition FOREIGN KEY(idProposition) REFERENCES Propositions(idProposition),
	point	int,
	exact	VARCHAR(50),
	CHECK(point='0' OR point='1' OR point='-1'),
	CHECK(exact='true' OR exact='false'),
	CONSTRAINT pk_pr PRIMARY KEY (idQuestion,idProposition)
);  


CREATE TABLE Participer
(
	idParticiper SERIAL UNIQUE NOT NULL,
	idUtilisateur	int ,
	idQuiz	int,
	note	int,
	CONSTRAINT fk_idUtilisateur FOREIGN KEY(idUtilisateur) REFERENCES Utilisateurs(idUtilisateur),
	CONSTRAINT fk_idQuiz FOREIGN KEY(idQuiz) REFERENCES Quiz(idQuiz),
	date	date,
	CONSTRAINT pk_pp PRIMARY KEY (idUtilisateur,idQuiz,date)
);  


CREATE TABLE Cocher
(
	idQuestion	int,
	idProposition	int,
	idParticiper	int,
	CONSTRAINT fk_idQuestion FOREIGN KEY(idQuestion) REFERENCES Questions(idQuestion),
	CONSTRAINT fk_idProposition FOREIGN KEY(idProposition) REFERENCES Propositions(idProposition),
	/*probléme*/CONSTRAINT fk_idParticiper FOREIGN KEY(idParticiper) REFERENCES Participer(idParticiper),
	CONSTRAINT pk_coc PRIMARY KEY (idQuestion,idProposition,idParticiper)
);  

